<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud-Kubernetes on Charles Vosloo</title>
    <link>http://localhost:1313/k8s-resume-blog/cloud-kubernetes/</link>
    <description>Recent content in Cloud-Kubernetes on Charles Vosloo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/k8s-resume-blog/cloud-kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Week Two</title>
      <link>http://localhost:1313/k8s-resume-blog/cloud-kubernetes/week_two/</link>
      <pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/k8s-resume-blog/cloud-kubernetes/week_two/</guid>
      <description>Step 3: Set Up Kubernetes on a Public Cloud Provider Since it takes less than 2 minutes this is and easy first step. This command being the final iteration:&#xA;civo kubernetes create ecom –remove-applications=traefik2-nodeport –applications traefik2-loadbalancer, cert-manager –cni-plugin cilium --nodes 1 --size g4s.kube.medium create-firewall –wait –save –merge –switch&#xA;You can interact with Civo in three ways:&#xA;The Dashboard Civo CLI Terraform I used the CLI. I was able to set up a bash script to automate the next step of exposing the cluster to https, Traefic LoadBalancer and cert-manager shown in the scripts section of my code-repository https://github.</description>
    </item>
  </channel>
</rss>
