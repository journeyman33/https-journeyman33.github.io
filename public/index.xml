<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Charles Vosloo</title>
    <link>http://localhost:1313/k8s-resume-blog/</link>
    <description>Recent content on Charles Vosloo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/k8s-resume-blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Week Three</title>
      <link>http://localhost:1313/k8s-resume-blog/cloud-kubernetes/week_three/</link>
      <pubDate>Wed, 20 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/k8s-resume-blog/cloud-kubernetes/week_three/</guid>
      <description>Step 6: Implement Configuration Management Task: Add a feature toggle to the web application to enable a “dark mode” for the website. I first attempted this without reading the instructions carefully. It does not ask to create a physical day night switch on the web app to toggle between dark mode and light mode, but rather to create a kubernetes config map to toggle the settings with the default set to dark mode.</description>
    </item>
    <item>
      <title>Week Two</title>
      <link>http://localhost:1313/k8s-resume-blog/cloud-kubernetes/week_two/</link>
      <pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/k8s-resume-blog/cloud-kubernetes/week_two/</guid>
      <description>Step 3: Set Up Kubernetes on a Public Cloud Provider Since it takes less than 2 minutes this is and easy first step. This command being the final iteration:&#xA;civo kubernetes create ecom –remove-applications=traefik2-nodeport –applications traefik2-loadbalancer, cert-manager –cni-plugin cilium --nodes 1 --size g4s.kube.medium create-firewall –wait –save –merge –switch&#xA;You can interact with Civo in three ways:&#xA;The Dashboard Civo CLI Terraform I used the CLI. I was able to set up a bash script to automate the next step of exposing the cluster to https, Traefic LoadBalancer and cert-manager shown in the scripts section of my code-repository https://github.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/k8s-resume-blog/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/k8s-resume-blog/about/</guid>
      <description>About Me Charles Vosloo is a Devops Engineer and a kubernetes enthusiast.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/k8s-resume-blog/mynotes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/k8s-resume-blog/mynotes/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/k8s-resume-blog/search/placeholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/k8s-resume-blog/search/placeholder/</guid>
      <description></description>
    </item>
    <item>
      <title>Posts Archive</title>
      <link>http://localhost:1313/k8s-resume-blog/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/k8s-resume-blog/archive/</guid>
      <description></description>
    </item>
  </channel>
</rss>
